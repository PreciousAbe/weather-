[{"C:\\Users\\HP\\CODE\\weather task\\weather\\src\\index.js":"1","C:\\Users\\HP\\CODE\\weather task\\weather\\src\\App.js":"2","C:\\Users\\HP\\CODE\\weather task\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\CODE\\weather task\\weather\\src\\Weather.jsx":"4"},{"size":340,"mtime":1671378137885,"results":"5","hashOfConfig":"6"},{"size":700,"mtime":1671385754288,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1670688536585,"results":"8","hashOfConfig":"6"},{"size":2532,"mtime":1671401587449,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y5dsfk",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"C:\\Users\\HP\\CODE\\weather task\\weather\\src\\index.js",[],[],"C:\\Users\\HP\\CODE\\weather task\\weather\\src\\App.js",[],[],"C:\\Users\\HP\\CODE\\weather task\\weather\\src\\reportWebVitals.js",[],[],"C:\\Users\\HP\\CODE\\weather task\\weather\\src\\Weather.jsx",["23"],[],"import React, {useState} from \"react\"\r\nimport \"./Weather.css\"\r\nimport axios from 'axios;'\r\n\r\nexport default function Weather() {\r\n   const [weatherData, setweatherData] = useState({ready: false});\r\n   function handleResponse(response) {\r\n     \r\n     setweatherData({\r\n      ready: true,\r\n      temperature: response.data.main.temp,\r\n      humidity: response.data.main.humidity,\r\n      wind: response.data.main.wind.speed,\r\n      Date: \"Monday 06:00\",\r\n      description: response.data.weather[0].description,\r\n      iconUrl : \"https://ssl.gstatic.com/onebox/weather/64/partly_cloudy.png\",\r\n     city: response.data.name,\r\n     });\r\n\r\n     setReady(true);\r\n   }\r\n   if (weatherData.ready) {\r\n\r\n    return (\r\n      <div className=\"Weather\">\r\n        <form>\r\n          <div className=\"row\">\r\n            <div className=\"col-9\">\r\n              <input\r\n                type=\"Search\"\r\n                placeholder=\"Enter a City...\"\r\n                className=\"form-control\"\r\n                autoFocus=\"on\"\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <input\r\n                type=\"Submit\"\r\n                value=\"Search\"\r\n                className=\"btn btn-primary w-100\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <h1>{weatherData.city}</h1>\r\n        <ul>\r\n          <li>{weatherData.date}</li>\r\n          <li className=\"text-capitalize\">{weatherData.description}</li>\r\n        </ul>\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <div className=\"clearfix mt-3\">\r\n              <img\r\n                src={weatherData.iconUrl}\r\n                alt={weatherData.description}\r\n                className=\"float-left\"\r\n              />\r\n              <div className=\"float-left\">\r\n                <span className=\"temperature\">{Math.round(weatherData.temperature)}</span>\r\n                <span className=\"unit\">Â°C</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <ul>\r\n              <li>Humidity: {weatherData.humidity}%</li>\r\n              <li>Wind: {weatherData.wind} km/h%</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n   } else {\r\n\r\n     let apikey = \"5f472b7acba333cd8a035ea85a0d4d4c\"\r\n     let city = \"New York\"\r\n     let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apikey}&units=metric`;\r\n     axios.get(apiUrl).then(handleResponse);\r\n  \r\n     return \"loading...\"\r\n   }\r\n  \r\n  \r\n};\r\n",{"ruleId":"24","severity":2,"message":"25","line":20,"column":6,"nodeType":"26","messageId":"27","endLine":20,"endColumn":14},"no-undef","'setReady' is not defined.","Identifier","undef"]